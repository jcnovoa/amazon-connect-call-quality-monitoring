{
  "Transform": "AWS::Serverless-2016-10-31",
  "Parameters": {
    "CcpUrl": {
      "Type": "String",
      "Description": "The URL of your softphone."
    },
    "SamlUrl": {
      "Type": "String",
      "Description": "The SAML URL for your instance. Leave empty if you aren't using SAML."
    }
  },
  "Resources": {
    "CDKBuilderRoleE762B26F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/CloudFrontFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSCloudFormationFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonCognitoPowerUser"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonDynamoDBFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonESFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/CloudWatchEventsFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/IAMFullAccess"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSKeyManagementServicePowerUser"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSLambdaFullAccess"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DemoTemplate/CDK Builder/Role/Resource"
      }
    },
    "CDKBuilderRoleDefaultPolicyEBEBAAEA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CDKBuilderA2E6D800"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "CDKBuilderA2E6D800"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "CDKBuilderA2E6D800"
                    },
                    "-*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CDKBuilderRoleDefaultPolicyEBEBAAEA",
        "Roles": [
          {
            "Ref": "CDKBuilderRoleE762B26F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DemoTemplate/CDK Builder/Role/DefaultPolicy/Resource"
      }
    },
    "CDKBuilderA2E6D800": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "CCP_URL",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "CcpUrl"
              }
            },
            {
              "Name": "SAML_URL",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "CcpUrl"
              }
            }
          ],
          "Image": "aws/codebuild/standard:1.0",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CDKBuilderRoleE762B26F",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"1.0\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"npm install -g aws-cdk\",\n        \"npm install -g typescript\",\n        \"cdk --version\",\n        \"export ACCOUNT_ID=`aws sts get-caller-identity --query Account --output text`\",\n        \"cdk bootstrap aws://$ACCOUNT_ID/$AWS_REGION\",\n        \"mkdir project && cd project\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"aws s3 cp s3://amazon-connect-monitoring-prod/monitoring-solution.zip monitoring-solution.zip\",\n        \"unzip monitoring-solution.zip\",\n        \"ls -la\",\n        \"cd monitoring-stack-cdk\",\n        \"npm install\",\n        \"cdk deploy --require-approval never\"\n      ]\n    }\n  }\n}",
          "Type": "NO_SOURCE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "DemoTemplate/CDK Builder/Resource"
      }
    },
    "CDKDeployerPolicy21ACC260": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kinesis:*",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:ListBucket",
                "s3:GetObjectVersion"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::amazon-connect-monitoring-test-artifact-bucket"
            },
            {
              "Action": "apigateway:*",
              "Effect": "Allow",
              "Resource": "arn:aws:apigateway:*::/*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "",
        "ManagedPolicyName": {
          "Fn::Join": [
            "",
            [
              "ConnectMonitoringArtifactAccess",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      "-",
                      {
                        "Fn::Select": [
                          2,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Ref": "AWS::StackId"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "Path": "/",
        "Roles": [
          {
            "Ref": "CDKBuilderRoleE762B26F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DemoTemplate/CDK Deployer Policy/Resource"
      }
    },
    "CodeBuildTriggerServiceRole233533C0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DemoTemplate/Code Build Trigger/ServiceRole/Resource"
      }
    },
    "CodeBuildTriggerServiceRoleDefaultPolicy10D513D6": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CDKBuilderA2E6D800",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildTriggerServiceRoleDefaultPolicy10D513D6",
        "Roles": [
          {
            "Ref": "CodeBuildTriggerServiceRole233533C0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "DemoTemplate/Code Build Trigger/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CodeBuildTriggerA0029700": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\n\nvar aws = require('aws-sdk')\nvar cfnResponse = require('./cfn-response')\nvar codeBuild = new aws.CodeBuild();\n\nexports.handler = async function(event, context) {\n    console.log(JSON.stringify(event, 0, 4) + '')\n    if(event.RequestType.toLowerCase() === 'create' || event.RequestType.toLowerCase() === 'update') {\n        try {\n            // Trigger a new CDK deploy\n            var buildResponse = await codeBuild.startBuild({\n                projectName: process.env.ProjectName,\n                environmentVariablesOverride: [{\n                    name: \"CFN_RESPONSE_DATA\",\n                    value: JSON.stringify({event: event, context: context})\n                }]\n            }).promise();\n        }\n        catch (err) {\n            console.log(err);\n            await cfnResponse.send(event, context, cfnResponse.FAILED, {'error': err})\n        }\n    } \n    else {\n        await cfnResponse.send(event, context, cfnResponse.SUCCESS, {})\n    }\n}  "
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildTriggerServiceRole233533C0",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Environment": {
          "Variables": {
            "ProjectName": {
              "Ref": "CDKBuilderA2E6D800"
            }
          }
        },
        "Timeout": 900
      },
      "DependsOn": [
        "CodeBuildTriggerServiceRoleDefaultPolicy10D513D6",
        "CodeBuildTriggerServiceRole233533C0"
      ],
      "Metadata": {
        "aws:cdk:path": "DemoTemplate/Code Build Trigger/Resource"
      }
    },
    "CodeBuildTriggerInvoke": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CodeBuildTriggerA0029700",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "DemoTemplate/CodeBuild Trigger Invoke"
      }
    },
    "ssmUserCreationUrl3792F2CB": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "CodeBuildTriggerInvoke",
            "CognitoUrl"
          ]
        },
        "Name": "UserCreationUrl"
      },
      "Metadata": {
        "aws:cdk:path": "DemoTemplate/ssm-UserCreationUrl/Resource"
      }
    },
    "ssmKibanaUrlC332F571": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "CodeBuildTriggerInvoke",
            "KibanaUrl"
          ]
        },
        "Name": "KibanaUrl"
      },
      "Metadata": {
        "aws:cdk:path": "DemoTemplate/ssm-KibanaUrl/Resource"
      }
    },
    "ssmCloudfrontUrlE1BC5F29": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Fn::GetAtt": [
            "CodeBuildTriggerInvoke",
            "CloudfrontUrl"
          ]
        },
        "Name": "CloudfrontUrl"
      },
      "Metadata": {
        "aws:cdk:path": "DemoTemplate/ssm-CloudfrontUrl/Resource"
      }
    }
  },
  "Outputs": {
    "UserCreationUrl": {
      "Value": {
        "Fn::GetAtt": [
          "CodeBuildTriggerInvoke",
          "CognitoUrl"
        ]
      }
    },
    "KibanaUrl": {
      "Value": {
        "Fn::GetAtt": [
          "CodeBuildTriggerInvoke",
          "KibanaUrl"
        ]
      }
    },
    "CloudfrontUrl": {
      "Value": {
        "Fn::GetAtt": [
          "CodeBuildTriggerInvoke",
          "CloudfrontUrl"
        ]
      }
    }
  }
}